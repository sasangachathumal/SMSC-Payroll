/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.smsc.view.employee;

import com.smsc.controller1.*;
import com.smsc.model.*;
import com.smsc.other.Validation;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author linux
 */
public class search_employee extends javax.swing.JFrame {
    int xmouse;
    int ymouse;
    DefaultComboBoxModel model;
    /**
     * Creates new form search_employee
     */
    public search_employee() {
        initComponents();
        setLocationRelativeTo(null);
        loadnic();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        searchemployeePanel = new javax.swing.JPanel();
        sdateLabel = new javax.swing.JLabel();
        sdateText = new javax.swing.JTextField();
        ssurnameLabel = new javax.swing.JLabel();
        ssurenameText = new javax.swing.JTextField();
        slastnameText = new javax.swing.JTextField();
        slastnameLabel = new javax.swing.JLabel();
        snicLabel = new javax.swing.JLabel();
        snicText = new javax.swing.JTextField();
        saddressText = new javax.swing.JTextField();
        saddressLabel = new javax.swing.JLabel();
        stelephoneLabel = new javax.swing.JLabel();
        stelephoneText = new javax.swing.JTextField();
        updateemployeeButton = new javax.swing.JButton();
        viewemployee = new javax.swing.JButton();
        deleteEmployeeButton1 = new javax.swing.JButton();
        labEmployeeJobRole = new javax.swing.JLabel();
        labEmployeeGrade = new javax.swing.JLabel();
        labEmployeeDepartment = new javax.swing.JLabel();
        deidLabel1 = new javax.swing.JLabel();
        comboJobrole = new javax.swing.JComboBox();
        comboDepartment = new javax.swing.JComboBox();
        comboGrade = new javax.swing.JComboBox();
        dsarechButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        btRadioMale = new javax.swing.JRadioButton();
        btRadioFemail = new javax.swing.JRadioButton();
        comboEmployeeNic = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        searchemployeePanel.setBackground(new java.awt.Color(255, 255, 255));
        searchemployeePanel.setLayout(null);

        sdateLabel.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        sdateLabel.setForeground(new java.awt.Color(0, 0, 102));
        sdateLabel.setText("Employee Add Date  : ");
        searchemployeePanel.add(sdateLabel);
        sdateLabel.setBounds(420, 150, 170, 30);

        sdateText.setEditable(false);
        sdateText.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        sdateText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sdateTextActionPerformed(evt);
            }
        });
        searchemployeePanel.add(sdateText);
        sdateText.setBounds(590, 150, 160, 30);

        ssurnameLabel.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ssurnameLabel.setForeground(new java.awt.Color(0, 0, 102));
        ssurnameLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ssurnameLabel.setText("Employee Surname  : ");
        searchemployeePanel.add(ssurnameLabel);
        ssurnameLabel.setBounds(20, 270, 170, 30);

        ssurenameText.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        ssurenameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ssurenameTextActionPerformed(evt);
            }
        });
        searchemployeePanel.add(ssurenameText);
        ssurenameText.setBounds(190, 270, 220, 30);

        slastnameText.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        slastnameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                slastnameTextActionPerformed(evt);
            }
        });
        searchemployeePanel.add(slastnameText);
        slastnameText.setBounds(190, 310, 220, 30);

        slastnameLabel.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        slastnameLabel.setForeground(new java.awt.Color(0, 0, 102));
        slastnameLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        slastnameLabel.setText("Employee Lastname  : ");
        searchemployeePanel.add(slastnameLabel);
        slastnameLabel.setBounds(20, 310, 170, 30);

        snicLabel.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        snicLabel.setForeground(new java.awt.Color(0, 0, 102));
        snicLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        snicLabel.setText("NIC No  : ");
        searchemployeePanel.add(snicLabel);
        snicLabel.setBounds(100, 350, 90, 30);

        snicText.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        snicText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                snicTextActionPerformed(evt);
            }
        });
        snicText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                snicTextKeyReleased(evt);
            }
        });
        searchemployeePanel.add(snicText);
        snicText.setBounds(190, 350, 220, 30);

        saddressText.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        saddressText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saddressTextActionPerformed(evt);
            }
        });
        searchemployeePanel.add(saddressText);
        saddressText.setBounds(190, 390, 220, 30);

        saddressLabel.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        saddressLabel.setForeground(new java.awt.Color(0, 0, 102));
        saddressLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        saddressLabel.setText("Employee Address  : ");
        searchemployeePanel.add(saddressLabel);
        saddressLabel.setBounds(20, 390, 170, 30);

        stelephoneLabel.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        stelephoneLabel.setForeground(new java.awt.Color(0, 0, 102));
        stelephoneLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        stelephoneLabel.setText("Employee Telephone  : ");
        searchemployeePanel.add(stelephoneLabel);
        stelephoneLabel.setBounds(10, 480, 180, 30);

        stelephoneText.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        stelephoneText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stelephoneTextActionPerformed(evt);
            }
        });
        stelephoneText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                stelephoneTextKeyReleased(evt);
            }
        });
        searchemployeePanel.add(stelephoneText);
        stelephoneText.setBounds(190, 480, 220, 30);

        updateemployeeButton.setBackground(new java.awt.Color(102, 102, 102));
        updateemployeeButton.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        updateemployeeButton.setText("Update Employee");
        updateemployeeButton.setBorder(null);
        updateemployeeButton.setBorderPainted(false);
        updateemployeeButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updateemployeeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateemployeeButtonActionPerformed(evt);
            }
        });
        searchemployeePanel.add(updateemployeeButton);
        updateemployeeButton.setBounds(280, 530, 180, 40);

        viewemployee.setBackground(new java.awt.Color(102, 102, 102));
        viewemployee.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        viewemployee.setText("View All Employee");
        viewemployee.setBorder(null);
        viewemployee.setBorderPainted(false);
        viewemployee.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        viewemployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewemployeeActionPerformed(evt);
            }
        });
        searchemployeePanel.add(viewemployee);
        viewemployee.setBounds(30, 530, 240, 40);

        deleteEmployeeButton1.setBackground(new java.awt.Color(102, 102, 102));
        deleteEmployeeButton1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        deleteEmployeeButton1.setText("Delete Employee");
        deleteEmployeeButton1.setBorder(null);
        deleteEmployeeButton1.setBorderPainted(false);
        deleteEmployeeButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteEmployeeButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteEmployeeButton1ActionPerformed(evt);
            }
        });
        searchemployeePanel.add(deleteEmployeeButton1);
        deleteEmployeeButton1.setBounds(470, 530, 160, 40);

        labEmployeeJobRole.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        labEmployeeJobRole.setForeground(new java.awt.Color(0, 0, 102));
        labEmployeeJobRole.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labEmployeeJobRole.setText("Employee Job role  : ");
        searchemployeePanel.add(labEmployeeJobRole);
        labEmployeeJobRole.setBounds(30, 230, 160, 30);

        labEmployeeGrade.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        labEmployeeGrade.setForeground(new java.awt.Color(0, 0, 102));
        labEmployeeGrade.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labEmployeeGrade.setText("Employee Grade  : ");
        searchemployeePanel.add(labEmployeeGrade);
        labEmployeeGrade.setBounds(40, 150, 150, 30);

        labEmployeeDepartment.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        labEmployeeDepartment.setForeground(new java.awt.Color(0, 0, 102));
        labEmployeeDepartment.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labEmployeeDepartment.setText("Employee Department  : ");
        searchemployeePanel.add(labEmployeeDepartment);
        labEmployeeDepartment.setBounds(0, 190, 190, 30);

        deidLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        deidLabel1.setForeground(new java.awt.Color(0, 0, 102));
        deidLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        deidLabel1.setText("Employee Nic  : ");
        searchemployeePanel.add(deidLabel1);
        deidLabel1.setBounds(10, 90, 162, 32);

        searchemployeePanel.add(comboJobrole);
        comboJobrole.setBounds(190, 230, 220, 26);

        searchemployeePanel.add(comboDepartment);
        comboDepartment.setBounds(190, 190, 220, 26);

        searchemployeePanel.add(comboGrade);
        comboGrade.setBounds(190, 150, 220, 26);

        dsarechButton1.setBackground(new java.awt.Color(102, 102, 102));
        dsarechButton1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        dsarechButton1.setText("Search");
        dsarechButton1.setBorderPainted(false);
        dsarechButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dsarechButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dsarechButton1ActionPerformed(evt);
            }
        });
        searchemployeePanel.add(dsarechButton1);
        dsarechButton1.setBounds(490, 90, 120, 30);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 102));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Employee Genger  : ");
        searchemployeePanel.add(jLabel5);
        jLabel5.setBounds(30, 430, 160, 22);

        buttonGroup1.add(btRadioMale);
        btRadioMale.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btRadioMale.setForeground(new java.awt.Color(0, 0, 102));
        btRadioMale.setText("Male");
        btRadioMale.setContentAreaFilled(false);
        searchemployeePanel.add(btRadioMale);
        btRadioMale.setBounds(190, 430, 58, 22);

        buttonGroup1.add(btRadioFemail);
        btRadioFemail.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btRadioFemail.setForeground(new java.awt.Color(0, 0, 102));
        btRadioFemail.setText("Female");
        btRadioFemail.setContentAreaFilled(false);
        searchemployeePanel.add(btRadioFemail);
        btRadioFemail.setBounds(280, 430, 74, 22);

        comboEmployeeNic.setEditable(true);
        comboEmployeeNic.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        comboEmployeeNic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboEmployeeNicActionPerformed(evt);
            }
        });
        searchemployeePanel.add(comboEmployeeNic);
        comboEmployeeNic.setBounds(180, 90, 298, 40);

        jButton1.setBackground(new java.awt.Color(0, 102, 153));
        jButton1.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("X");
        jButton1.setBorderPainted(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        searchemployeePanel.add(jButton1);
        jButton1.setBounds(713, 0, 50, 40);

        jButton2.setBackground(new java.awt.Color(0, 102, 153));
        jButton2.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("_");
        jButton2.setBorderPainted(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        searchemployeePanel.add(jButton2);
        jButton2.setBounds(665, 0, 50, 40);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 3, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("SMSC Payroll");
        searchemployeePanel.add(jLabel2);
        jLabel2.setBounds(260, 0, 250, 42);

        jLabel1.setBackground(new java.awt.Color(0, 102, 153));
        jLabel1.setOpaque(true);
        jLabel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jLabel1MouseDragged(evt);
            }
        });
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel1MousePressed(evt);
            }
        });
        searchemployeePanel.add(jLabel1);
        jLabel1.setBounds(1, 0, 767, 40);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 102));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Search Employee");
        searchemployeePanel.add(jLabel3);
        jLabel3.setBounds(20, 40, 730, 42);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/smsc/view/photos/back3232.png"))); // NOI18N
        jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 153), 7));
        searchemployeePanel.add(jLabel4);
        jLabel4.setBounds(0, 0, 768, 580);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(searchemployeePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 768, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(searchemployeePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 581, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sdateTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sdateTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sdateTextActionPerformed

    private void ssurenameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ssurenameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ssurenameTextActionPerformed

    private void slastnameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_slastnameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_slastnameTextActionPerformed

    private void snicTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_snicTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_snicTextActionPerformed

    private void snicTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_snicTextKeyReleased
        if (evt.getKeyCode() != KeyEvent.VK_BACK_SPACE) {
            Validation.validateNIC(snicText);
        }
    }//GEN-LAST:event_snicTextKeyReleased

    private void saddressTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saddressTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saddressTextActionPerformed

    private void stelephoneTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stelephoneTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stelephoneTextActionPerformed

    private void stelephoneTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_stelephoneTextKeyReleased
        if (evt.getKeyCode() != KeyEvent.VK_BACK_SPACE) {
            Validation.validateTelephone(stelephoneText);
        }
    }//GEN-LAST:event_stelephoneTextKeyReleased

    private void updateemployeeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateemployeeButtonActionPerformed
       /* String text = comboEmployeeNic.getSelectedItem().toString();
        String address = saddressText.getText();
        String lastname = slastnameText.getText();
        String surname = ssurenameText.getText();
        String nic = snicText.getText();
        String telephone = stelephoneText.getText();
        String department = texEmployeeDepartment.getText();
        String grade = texEmployeeGrade.getText();
        String jobrole = texEmployeeJobRole.getText();


        try {
            Empolyee_Controller empolyee_Controller = new Empolyee_Controller();
            Department_Details_Controller department_Details_Controller = new Department_Details_Controller();
            Department_Controller department_Controller = new Department_Controller();
            Jobrole_Details_Controller jobrole_Details_Controller = new Jobrole_Details_Controller();
            Jobrole_Controller jobrole_Controller = new Jobrole_Controller();
            Grade_Controller grade_Controller = new Grade_Controller();

            Employee Search_Employee_by_Nic = empolyee_Controller.Search_Employee_by_Nic(text);
            Department_Detail searchDepartment_Detailseid = department_Details_Controller.searchDepartment_Detailseid(Search_Employee_by_Nic.getEid());

        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Manage_Employee_info.class.getName()).log(Level.SEVERE, null, ex);
        }*/
    }//GEN-LAST:event_updateemployeeButtonActionPerformed

    private void viewemployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewemployeeActionPerformed
       /* if (all_Employee == null) {
            all_Employee = new View_All_Employee();
            all_Employee.setVisible(true);
        } else {
            all_Employee.setVisible(true);
        }*/
    }//GEN-LAST:event_viewemployeeActionPerformed

    private void deleteEmployeeButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteEmployeeButton1ActionPerformed
        ifRemove();
    }//GEN-LAST:event_deleteEmployeeButton1ActionPerformed

    private void dsarechButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dsarechButton1ActionPerformed
        searchEmployee();
    }//GEN-LAST:event_dsarechButton1ActionPerformed

    private void comboEmployeeNicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboEmployeeNicActionPerformed
        dsarechButton1.doClick();
    }//GEN-LAST:event_comboEmployeeNicActionPerformed

    private void jLabel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MousePressed
        xmouse=evt.getX();
        ymouse=evt.getY();
    }//GEN-LAST:event_jLabel1MousePressed

    private void jLabel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseDragged
        int x=evt.getXOnScreen();
        int y=evt.getYOnScreen();
        this.setLocation(x-xmouse, y-ymouse);
    }//GEN-LAST:event_jLabel1MouseDragged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.setState(search_employee.ICONIFIED);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(search_employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(search_employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(search_employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(search_employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new search_employee().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton btRadioFemail;
    private javax.swing.JRadioButton btRadioMale;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox comboDepartment;
    private javax.swing.JComboBox comboEmployeeNic;
    private javax.swing.JComboBox comboGrade;
    private javax.swing.JComboBox comboJobrole;
    private javax.swing.JLabel deidLabel1;
    private javax.swing.JButton deleteEmployeeButton1;
    private javax.swing.JButton dsarechButton1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel labEmployeeDepartment;
    private javax.swing.JLabel labEmployeeGrade;
    private javax.swing.JLabel labEmployeeJobRole;
    private javax.swing.JLabel saddressLabel;
    private javax.swing.JTextField saddressText;
    private javax.swing.JLabel sdateLabel;
    private javax.swing.JTextField sdateText;
    private javax.swing.JPanel searchemployeePanel;
    private javax.swing.JLabel slastnameLabel;
    private javax.swing.JTextField slastnameText;
    private javax.swing.JLabel snicLabel;
    private javax.swing.JTextField snicText;
    private javax.swing.JTextField ssurenameText;
    private javax.swing.JLabel ssurnameLabel;
    private javax.swing.JLabel stelephoneLabel;
    private javax.swing.JTextField stelephoneText;
    private javax.swing.JButton updateemployeeButton;
    private javax.swing.JButton viewemployee;
    // End of variables declaration//GEN-END:variables

    private void loadnic() {
        try {
            ArrayList<Employee> employees=new Empolyee_Controller().get_all_Employee();
            model=(DefaultComboBoxModel) comboEmployeeNic.getModel();
            model.removeAllElements();
            model.addElement("");
            if (!employees.isEmpty()) {
                for(Employee employee : employees){
                    model.addElement(employee.getNic_No());
                }
            } else {
                
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(search_employee.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void searchEmployee() {
        String nic = comboEmployeeNic.getSelectedItem().toString();
        Empolyee_Controller empolyee_Controller = new Empolyee_Controller();
        try {
            Employee Search_Employee_by_Nic = empolyee_Controller.Search_Employee_by_Nic(nic);
            if (Search_Employee_by_Nic != null) {
                Grade_Controller grade_Controller = new Grade_Controller();
                Grade searchGrade_byGradeid = grade_Controller.searchGrade_byGradeid(Search_Employee_by_Nic.getGid());
                if (searchGrade_byGradeid != null) {
                    Department_Details_Controller department_Details_Controller = new Department_Details_Controller();
                    Department_Detail searchDepartment_Detailseid = department_Details_Controller.searchDepartment_Detailseid(Search_Employee_by_Nic.getEid());
                    if (searchDepartment_Detailseid != null) {
                        Department_Controller department_Controller = new Department_Controller();
                        Department search_Department_by_id = department_Controller.search_Department_by_id(searchDepartment_Detailseid.getDid());
                        if (search_Department_by_id != null) {
                            Jobrole_Details_Controller jobrole_Details_Controller = new Jobrole_Details_Controller();
                            Job_role_Detail searchjobrole_details = jobrole_Details_Controller.searchjobrole_details(Search_Employee_by_Nic.getEid());
                            if (searchjobrole_details != null) {
                                Jobrole_Controller jobrole_Controller = new Jobrole_Controller();
                                Job_Role searchjobrole_byjobroleid = jobrole_Controller.searchjobrole_byjobroleid(searchjobrole_details.getJrid());
                                if (searchjobrole_byjobroleid != null) {
                                    sdateText.setText(Search_Employee_by_Nic.getDate());
                                    loadgrade(searchGrade_byGradeid.getName());
                                    loadDepartment(search_Department_by_id.getName());
                                    loadJobRole(searchjobrole_byjobroleid.getName());
                                    saddressText.setText(Search_Employee_by_Nic.getAddress());
                                    slastnameText.setText(Search_Employee_by_Nic.getLastname());
                                    snicText.setText(Search_Employee_by_Nic.getNic_No());
                                    ssurenameText.setText(Search_Employee_by_Nic.getSurename());
                                    stelephoneText.setText(Search_Employee_by_Nic.getTelephone());
                                    if (Search_Employee_by_Nic.getGender().equals("Male")) {
                                        btRadioMale.setSelected(true);
                                    } else {
                                        btRadioFemail.setSelected(true);
                                    }
                                } else {
                                    Toolkit.getDefaultToolkit().beep();
                                    JOptionPane.showMessageDialog(this, "Employee Job Role Not Found !!");
                                    sdateText.setText(Search_Employee_by_Nic.getDate());
                                    loadgrade(searchGrade_byGradeid.getName());
                                    loadDepartment(search_Department_by_id.getName());
                                    saddressText.setText(Search_Employee_by_Nic.getAddress());
                                    slastnameText.setText(Search_Employee_by_Nic.getLastname());
                                    snicText.setText(Search_Employee_by_Nic.getNic_No());
                                    ssurenameText.setText(Search_Employee_by_Nic.getSurename());
                                    stelephoneText.setText(Search_Employee_by_Nic.getTelephone());
                                    if (Search_Employee_by_Nic.getGender().equals("Male")) {
                                        btRadioMale.setSelected(true);
                                    } else {
                                        btRadioFemail.setSelected(true);
                                    }
                                }
                            } else {
                                Toolkit.getDefaultToolkit().beep();
                                JOptionPane.showMessageDialog(this, "employee Job Role Not Found !!");
                                sdateText.setText(Search_Employee_by_Nic.getDate());
                                loadgrade(searchGrade_byGradeid.getName());
                                loadDepartment(search_Department_by_id.getName());
                                saddressText.setText(Search_Employee_by_Nic.getAddress());
                                slastnameText.setText(Search_Employee_by_Nic.getLastname());
                                snicText.setText(Search_Employee_by_Nic.getNic_No());
                                ssurenameText.setText(Search_Employee_by_Nic.getSurename());
                                stelephoneText.setText(Search_Employee_by_Nic.getTelephone());
                                if (Search_Employee_by_Nic.getGender().equals("Male")) {
                                        btRadioMale.setSelected(true);
                                    } else {
                                        btRadioFemail.setSelected(true);
                                    }
                            }
                        } else {
                            Toolkit.getDefaultToolkit().beep();
                            JOptionPane.showMessageDialog(this, "Employee Department Not Found !!");
                            sdateText.setText(Search_Employee_by_Nic.getDate());
                            loadgrade(searchGrade_byGradeid.getName());
                            saddressText.setText(Search_Employee_by_Nic.getAddress());
                            slastnameText.setText(Search_Employee_by_Nic.getLastname());
                            snicText.setText(Search_Employee_by_Nic.getNic_No());
                            ssurenameText.setText(Search_Employee_by_Nic.getSurename());
                            stelephoneText.setText(Search_Employee_by_Nic.getTelephone());
                            if (Search_Employee_by_Nic.getGender().equals("Male")) {
                                        btRadioMale.setSelected(true);
                                    } else {
                                        btRadioFemail.setSelected(true);
                                    }
                        }
                    } else {
                        Toolkit.getDefaultToolkit().beep();
                        JOptionPane.showMessageDialog(this, "Employee Department Not Found !!");
                        sdateText.setText(Search_Employee_by_Nic.getDate());
                        loadgrade(searchGrade_byGradeid.getName());
                        saddressText.setText(Search_Employee_by_Nic.getAddress());
                        slastnameText.setText(Search_Employee_by_Nic.getLastname());
                        snicText.setText(Search_Employee_by_Nic.getNic_No());
                        ssurenameText.setText(Search_Employee_by_Nic.getSurename());
                        stelephoneText.setText(Search_Employee_by_Nic.getTelephone());
                        if (Search_Employee_by_Nic.getGender().equals("Male")) {
                                        btRadioMale.setSelected(true);
                                    } else {
                                        btRadioFemail.setSelected(true);
                                    }
                    }
                } else {
                    Toolkit.getDefaultToolkit().beep();
                    JOptionPane.showMessageDialog(this, "Employee Grade Not Found !!");
                    sdateText.setText(Search_Employee_by_Nic.getDate());
                    saddressText.setText(Search_Employee_by_Nic.getAddress());
                    slastnameText.setText(Search_Employee_by_Nic.getLastname());
                    snicText.setText(Search_Employee_by_Nic.getNic_No());
                    ssurenameText.setText(Search_Employee_by_Nic.getSurename());
                    stelephoneText.setText(Search_Employee_by_Nic.getTelephone());
                    if (Search_Employee_by_Nic.getGender().equals("Male")) {
                                        btRadioMale.setSelected(true);
                                    } else {
                                        btRadioFemail.setSelected(true);
                                    }
                }
            } else {
                //Toolkit.getDefaultToolkit().beep();
                //JOptionPane.showMessageDialog(this, "Employee Not Found !!");
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(search_employee.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadgrade(String name) {
        try {
            model=(DefaultComboBoxModel) comboGrade.getModel();
            model.addElement(name);
            ArrayList<Grade> grades=new Grade_Controller().getAllgrades();
            if (!grades.isEmpty()) {
                for (Grade grade : grades) {
                    if (!grade.getName().equals(name)) {
                        model.addElement(grade.getName());
                    } else {
                        
                    }
                }
            } else {
                
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(search_employee.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadDepartment(String name) {
        try {
            model=(DefaultComboBoxModel) comboDepartment.getModel();
            model.addElement(name);
            ArrayList<Department> departments=new Department_Controller().get_All_Department();
            if (!departments.isEmpty()) {
                for (Department department : departments) {
                    if (!department.getName().equals(name)) {
                        model.addElement(department.getName());
                    } else {
                        
                    }
                }
            } else {
                
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(search_employee.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadJobRole(String name) {
        try {
            model=(DefaultComboBoxModel) comboDepartment.getModel();
            model.addElement(name);
            ArrayList<Job_Role> job_Roles=new Jobrole_Controller().getalljobrole();
            if (!job_Roles.isEmpty()) {
                for (Job_Role job_Role : job_Roles) {
                    if (!job_Role.getName().equals(name)) {
                        model.addElement(job_Role.getName());
                    } else {
                        //System.out.println("mdvjgjfg");
                    }
                }
            } else {
                //System.out.println("lkjdjfhdf");
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(search_employee.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void ifRemove() {
        int count = 0;
        double amount = 0;
        try {
            String nic = comboEmployeeNic.getSelectedItem().toString();
            Employee employee = new Empolyee_Controller().Search_Employee_by_Nic(nic);
            if (employee != null) {
                ArrayList<Loan> loans = new Loan_Controller().searchLoans_byemployeeid(employee.getEid());
                if (!loans.isEmpty()) {
                    for (Loan loan : loans) {
                        if (loan.getIf_pay()==0) {
                            count++;
                            amount=amount+loan.getAmount();
                        } else {
                            
                        }
                    }
                } else {
                    
                }
            } else {
                
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(search_employee.class.getName()).log(Level.SEVERE, null, ex);
        }
        int confirm = JOptionPane.showConfirmDialog(this, "This Employee have "+count+" to pay. \n there are Total Amount \n"+amount+" . \n you want to Remove this Employee !!");
        if (confirm == JOptionPane.YES_OPTION) {
            removeEmployee();
        }
        
    }

    private void removeEmployee() {
        try {
            Empolyee_Controller empolyee_Controller = new Empolyee_Controller();
            Employee Search_Employee_by_Nic = empolyee_Controller.Search_Employee_by_Nic(comboEmployeeNic.getSelectedItem().toString());
            int Delete_Employee = empolyee_Controller.Delete_Employee(Search_Employee_by_Nic.getEid());
            if (Delete_Employee > 0) {
                JOptionPane.showMessageDialog(this, "\nEmployee Remove Success !!");
            } else {
                Toolkit.getDefaultToolkit().beep();
                JOptionPane.showMessageDialog(this, "\nEmployee Remove Fail !!");
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(search_employee.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
